@startuml Diagram
scale 1


class Control {
    +main()
    +Radio: audioPlayer
    +SwingUtilities.invokeLater(Runnable)
    }

class GUIIntro {
    +Image: image
    +JLabel: label, lblNouvellePartie,
    lblModeEvaluation
    +JButton: btnNouvellePartie, btnModeEvaluation,
    btnQuitter, btnCredits
    +ImageIcon: img
    +GUIIntro(constructeur)
    +paintComponent(), guiIntroFrame()
}

class CycleAzote {
    +float: jours, jourInitial, joursCalcul,
    compteurJoursCycle, tempAmmoniaque,
    tempNitrites
    +Eau: eau
    +String: actionEnCours
    +cycleAmmoniaque(eau, jours), cycleNitrite(eau, jours),
    cycleAzote(jours), cycler(jours)
    +incrJoursCalcul()
}

class Eau {
    +float: ph, gh, kh, penteNitrites,
    sommeAbsorptionNitrates, sommecontributionPH,
    variationPH, volumeEau, nitrites, nitrates,
    ammoniaque, tempAmmoniaque, tempNitrites,
    sommeAmmoniaque, sommeNitrites, jours,
    jourInitial, hauteur, largeur, longueur,
    scoreEau
    -float: scorePH, scoreGH, scoreKh,
    scoreAmmo, scoreNitrites, scoreNitrates
    +int: sommeAbsorptionDechets,
    potentielDechets, sommeDechets,
    hauteurEnPixels, positionEnPixels,
    randomNumber
    +short: valeur_changement
    +Random: random
    +boolean: dechetsCycleParti, cycleParti,
    menageDupesNit
    +String: actionEnCours
    +ArrayList: listeAmmoniaqueIteration<float>,
    listeNitritesTemp<float>, listeAmmoniaqueTemp<float>,
    listeAbsorption<int>, listeCycles<CycleAzote>
    +List: listeAmmoniaque<float>, listeNitrites<float>
    +ListIterator: iteratorAmmoniaque<float>,
    iteratorNitrites<float>
    +getPH(), getPHint(), setPH(), getGH(),
    setGH(), getKh(), setKh(), getAmmoniaque(),
    getNitrites(), getNitrates(), changerEau(),
    couleur(), sommeAmmoniaque(), sommeNitrites(),
    absorption(), variationPH(), variationGH(),
    variationKh(), variationNiveauEau(),
    changerEau(), accumulerDechets(), comportNitrates(),
    setScoreEau(), setScorePH(), setScoreGH(),
    setScoreKh(), setScoreAmmo(), setScoreNitrites(),
    setScoreNitrates(),
    +addAmmoniaque(ammoniaque), addNitrites(nitrites),
    toString(float), partirCycle(jourInit),
    +run()
}

class Molecules {
    +Eau: eau
    +double: molAtomeNAmmo, molAtomeNNi,
    molAtomeNNa, molAtomeONi, molAtomeONa,
    molAtomeH, sommeMoLn, sommeMolO,
    molAmmoniaque, molNitrites, molNitrates,
    +float: masseMolaireAmmoniaque, masseMolaireNitrites,
    masseMolaireNitrates
    +ammoniaqueMgLtoMol(), ammoniaqueAtomesMol(),
    nitritesMgLtoMol(), nitritesAtomesMol(),
    nitratesMgLtoMol(), nitratesAtomesMol(),
    sommeMolN(), sommeMolO(),
}

class Temps {
    +Timer: journee
    +int: DUREE, tempsActuel
    +boolean: isPaused, beenPaused
    +short: i
    +pause(), reprendre(), 
    checkCooldown()
    +jourAJour(jour)
}

class Outils {
    +String: nom
    +adapterNom()
}

class Pipette {
    +ImageIcon: curseur_vide,
    cruseur_plein, icone_vide,
    icone_plein
    +boolean: est_remplie
    +int: nbGouttes
    +Pipette(constructeur)
    +getEstRemplie(), setEstRemplie(),
    getNbGouttes(), setNbGouttes(),
    enleverUneGoutte()
    +changerEtatLabel(label)
    +changerEtatPanel(panel)
}

class Ciseau {
    +ImageIcon: icone_coquillage
    +Coquillage(constructeur)
    +changerCurseurPanel(panel)
    +setIcon(label)
}

class Coquillage {
    +ImageIcon: icone_filet
    +Ciseau(constructeur)
    +changerCurseurPanel(panel)
    +setIcon(label)
}

class Filet {
    +ImageIcon: icone_filet
    +Filet(constructeur)
    +changerCurseurPanel(panel)
    +setIcon(label)
}

class Pichet {
    +ImageIcon: icone_pichet
    +Pichet(constructeur)
    +changerCurseurPanel(panel)
    +setIcon(label)
}

class Aquarium {
    +Emplacementaq: emp1, emp2, emp3,
    aqua1, aqua2, aqua3, aqua4,aqua5,
    aqua6
    +Dimension: size_icone_inv,
    size_icone_poi
    +ImageIcon: empty_poi
    +Aquarium(constructeur, panel)
    +setVisible(boolean)
}

class Argent {
    +int: argent, emp1, emp2, emp3,
    poi1, poi2, poi3, poi4
    +String: montant
    +boolean: normal
    +paye(label, label2)
}

class Emplacementaq {
    +short: position
    +float: prix
    +boolean: plein
    +Emplacementaq(constructeur)
    +estPlein()
}

class Emplacementinv {
    +short: position
    +float: prix
    +boolean: plein
    +Emplacementinv(constructeur)
    +estPlein()
}

class EmplacementSante {
    +EmplacementSante(constructeur)
}

class Inventaire {
    +Emplacementinv: emp1, emp2, emp3,
    emp4, emp5, emp6
    +Dimension: size_icone_inv
    +Poisson: poisson_default
    +ImageIcon: img_aqua_poi_rouge, img_inv_poi_rouge,
    img_rouge_aqua, img_betta_aqua, img_tetra_aqua,
    img_aqua_betta, img_inv_betta, img_aqua_tetra,
    img_inv_neo, img_neo_aqua,
    img_inv_tetra, java_fern, blue_blue,
    scarlet_rot, img_temp, empty_poi, empty_inv,
    +Inventaire(constructeur, label)
    +setVisible(boolean)
}

class Magasin {
    +int: emp, prix_rouge, prix_betta,
    prix_tetra, prix_neo, prix_java,
    prix_blue, prix_scarlet, prix_erdtree
    +Random: random
    +ajustement_argent(prix)
    +checkPoissonPrix(type), checkPlantePrix(type),
    gotMoney(type)
    +generatingNumber(), updateToolTip(),
    rabais(short), resetPrice()
}

class Sante {
    +EmplacementSante emp1, emp2, emp3,
    emp4, emp5, emp6
    +Dimension:size_icone_sante
    +boolean: state1, state2, state3,
    state4, state5, state6
    +Sante(constructeur, label)
    +setVisible(boolean)
}

class Plante {
    int: index, prix
    +String: empInv, empAqua, nom
    +Plante(constructeur)
}

class BlueBlue {
    +ImageIcon: icon
    +int: prix, absorptionNitrates,
    absorptionDechets
    +float: contributionPH
}

class JavaFern {
    +ImageIcon: icon
    +int: prix, absorptionNitrates,
    absorptionDechets
    +float: contributionPH
}

class ScarletRot {
    +ImageIcon: icon
    +int: prix, absorptionNitrates,
    absorptionDechets
    +float: contributionPH
}

class Erdtree {
    +ImageIcon: icon
    +int: prix, absorptionNitrates,
    absorptionDechets
    +float: contributionPH
}

class PoissonÂ {
    +int: vel_x, vel_y, sante, index
    +String: direction, empInv, empAqua, nom
    +boolean: var
    +short: sante
    +Poisson: selection
    +Random: random
    +ArrayList: listeACleanUp<short>,
    listeVraisPoissons<Poisson>
    +Image: rip
    +setOpaque(isOpaque)
    +setXVelocity(vel_x), setYVelocity(vel_y),
    +setEmpInv(empInv), setEmpAqua(empAqua)
    +setNom(nom)
    +getXVelocity(), getYVelocity(), getEmpInv(),
    getEmpAqua(), getNom(), fishType(), 
    setSante(short), ajustersante(short, int),
    checkTolerance(string), killFish(short),
    cleanUp(), setFalse(short), setBarValue(short)
    +getImage(coter, img, poisson_droite, poisson_gauche, empty)
    +updateToolTip(label, type)
}

class PoissonBetta {
    +int: x_min, x_max, y_min, y_max, x_temp, y_temp,
    side, vel_x, vel_y, prix, dechets, tolerance
    +Image: img, poisson_droite, poisson_gauche
    +PoissonBetta(constructeur)
    +paintComponent(), deplacer(), checkTolerance(),
    setImg()
    +run()
}

class PoissonNeo {
    +int: x_min, x_max, y_min, y_max, x_temp, y_temp,
    side, vel_x, vel_y, prix, dechets, tolerance
    +Image: img, poisson_droite, poisson_gauche, empty
    +PoissonNeo(constructeur)
    +paintComponent(), deplacer(), checkTolerance(),
    setImg()
    +run()
}

class PoissonRouge {
    +int: x_min, x_max, y_min, y_max, x_temp, y_temp,
    side, vel_x, vel_y, prix, dechets, tolerance
    +Image: img, poisson_droite, poisson_gauche, empty
    +PoissonRouge(constructeur)
    +paintComponent(), deplacer(), checkTolerance(),
    setImg()
    +run()
}

class PoissonTetra {
    +int: x_min, x_max, y_min, y_max, x_temp, y_temp,
    side, vel_x, vel_y, prix, dechets, tolerance
    +Image: img, poisson_droite, poisson_gauche
    +PoissonNeo(constructeur)
    +paintComponent(), deplacer(), checkTolerance(),
    setImg()
    +run()
}

class GestionException {
    +GestionExceptionPoi(), GestionExceptionPla(),
    GestionExceptionObjet(), GestionExceptionRadio(),
    GestionExceptionThreadTemps(), 
    GestionExceptionThread(), GestionExceptionRadio2()
}

class MethodeGUIMain {
    +Aquarium: aquarium
    +Inventaire: inventaire
    +boolean: hasPlants, coolDownC, coolDownP, isCoquillage,
    isPichet, dansRectC
    +int: clickRecentC, CD_COQUILLAGE, CD_PICHET
    +checkRectanglesDeco(rectangle, label, icone, labels2,
    emplacement, hasPlant, hasPlantString, indexInv,
    indexAqua, pla)
    +checkRectanglesPoi(rectangle, label1, icone, label2,
    emplacement, hasFish, hasFishString, index, poi,
    aqua)
    +checkRectanglesPoiFilet(rectangle, label1, icone, hasFish,
    hasFishString, index, aqua)
    +checkRectanglesDecoCiseau(rectangle, label1, icone, hasPlant,
    hasPlantString, index, pla)
    +createPoissonTetra(emplacement, label1, index), 
    createPoissonRouge(emplacement, label1, index),
    createPoissonBetta(emplacement, label1, index),
    createPoissonNeo(emplacement, label1, index),
    +setEmpla(emplacement), getEmplaToInnt(emplacement)
    +setHasFish(hasFish), setHasPlant(hasPlant), 
    setHasFishFalse(hashFish), setHasPlantFalse(hasPlant)
    +setIndexPoi(index1)
    +setEmplaToFish(emplacement, poi, label1, index), 
    setEmplaToPlant(emplacement, pla, label1, index)
    +checkFishType(aqua), checkPlantType(plante)
    +setAquaName(index, aqua), setPlantName(index, plant)
    +hasPlant(), getEauDimensions(), setEauDimensions(dimension)
    +coolDownP(), coolDownC(), rectPlant(), rectAquarium()
}

class Radio {
    +Long: currentFrame
    +Clip: clip
    +String: status
    +AudioInputStream: audioInputStream
    +Radio(constructeur)
    +play(), pause(), resumeAudio(), 
    resetAudoStream()
}

class PanelAqua {
    +Image: background
    +PanelAqua(constructeur)
    +paintComponent()
}

class PanelInfo {
    +JLabel: lblAction, lblN, lblH, lblO,
    lblAmmo, lblNit, lblNat, lblPH, lblGH,
    lblKH, lblScore, lbldechets, lblAbsDechets
    +short: scoreEau
    +JProgressBar: progressBar
    +DecimalFormat: df
    +Molecules: mol
    +String: actionEnCours
    +PanelInfo(constructeur)
    +setActionEnCours(), changerEtatBarre(),
    paintComponent()
    +run()
}

class PanelShop {
    +int: i
    +JButton: poisson_rouge, poisson_betta,
    poisson_tetra, java_fern, blue_blue, scarlet_rot,
    poisson_neo, planteErdtree
    +JLabel: rouge, betta, tetra, java, blue,
    rot, neo, erdtree, rabais_rouge, rabais_betta,
    rabais_tetra, rabais_java, rabais_blue, rabais_rot,
    rabais_neo, rabais_erdtree
    + Dimension: shop_dimension
    +PanelShop(constructeur)
    +paintComponent()
    +checkcase(icon, type, poisson, plante)
    +checkFish(typePoisson, index), checkPlant(typePlante, index),
    +setLabel(index, icon, typePlante)
    +setName(index, typePlante)
}

class PanelTest {
    +CycleAqua: cycle
    +JLabel: lblAmmo, lblNitrites, lblNitrates, 
    lblPH, lblGH, lblKH, lblScorePH, lblScoreGH, 
    lblScoreKH, lblScoreAmmo, lblScoreNitrites, 
    lblScoreNitrates, lblScoreEau, lblOKAmmo, 
    lblOKNitrites, lblOKNitrates, lblOKPH, lblOKGH, 
    lblOKKH
    +Thread: cycle1
    +boolean: isFocused
    +Molecules: mol
    +PanelTest(constructeur)
}

class GUIMain {
    +PanelAqua: panelAqua
    +PanelTest: panelTest
    +JTabbedPane: tabbedPane
    +JLabel: testEau, empty, aquarium_kit_ouvert,
    aquarium_kit_fermer, eau_label, eau_label,
    inventaire_ouvert, inventaire_fermer, 
    inventaire_bg, filet_label, pause_label, 
    reprendre_label, label_tutoriel, label_information 
    hamis, ciseau_label, label_argent,
    lblPipette, label_argent_aqua,
    label_argent_shop, label_jours, label_tuto1,
    label_tuto2, label_tuto3, label_tuto4, label_tuto5,
    label_tuto6, label_tuto7, label_tuto8, skip_tuto1,
    skip_tuto2, radio_on, radio_off, label_pause, 
    label_reprendre, kit_ouvert, kit_fermer
    +String: nom, empla1, empla2, empla3, empla4,
    empla5, empla6, poi1, poi2, poi3, poi4,
    poi5, poi6, actionEnCours, pla1, pla2, pla3,
    pla4, pla5, pla6, aqua1, aqua2, aqua3, aqua4,
    aqua5, aqua6, aquaPla1, aquaPla2, aquaPla3,
    aquaPla4, aquaPla5, aquaPla6
    +Rectangle: rectTest, rectEau, rectEmp1,
    rectEmp2, rectEmp3, rectEmp4, rectEmp5, rectEmp6,
    rectAqua1, rectAqua2, rectAqua3, rectAqua4,
    rectAqua5, rectAqua6, rectShop, rectEau
    +Temps: temps
    +Eau: eau
    +Sante: sante
    +Pipette: pipette
    +Poisson: poisson_default
    +Plante: plante_default
    +PoissonRouge: poisson_rouge
    +PoissonBetta: poisson_betta
    +PoissonTetra: poisson_tetra
    +PoissonNeo: poisson_neo
    +Filet: filet
    +Ciseau: ciseau
    +Pichet: pichet
    +Coquillage: coquillage
    +ImageIcon: tetra_curseur, rajoutIcon,
    iconeAppli
    +Inventaire: inventaire
    +Aquarium: aquarium
    +CycleAzote: cycleInitial
    +Arraylists<Poisson>, Arraylists<Plante>
    +Thread: tpoisson_rouge, tpoisson_betta,
    tpoisson_tetra, threadEau, tCycleInitial,
    tPanelInfo
    +short: stade, iteration
    +int: vel_x, vel_y
    +float: jours
    +boolean: hasFish1, hasFish2, hasFish3, hasFish4,
    hasFish5, hasFish6, hasPlant1, hasPlant2, hasPlant3
    +visibleBordersDeco(), visibleBordersPoi(),
    invisibleBordersDeco(), invisibleBordersPoi(),
    basicCursor(), aquaVisibleTrue(), aquaVisibleFalse(),
    empVisibTrue(), empVisibFalse(), setOutilsVisible(),
    setOutilsInvisible(), setEverythinGood(), setCooldownVisibleP(),
    setCooldownInvisibleC(), setCooldownVisibleC(),
    setCooldownInvisibleP()
    +setCursor(label)
}


Control <|-- GUIIntro
Control <|-- Radio

GUIIntro <|-- GUIMain
GUIIntro <|-- Radio
GUIMain <|-- PanelAqua
GUIMain <|-- Radio
GUIMain <|-- PanelShop
GUIMain <|-- PanelInfo
PanelAqua <|-- PanelTest
PanelInfo <|-- Molecules

Pipette *-- "hÃ©rite" Outils
Ciseau *-- "hÃ©rite" Outils
Filet *-- "hÃ©rite" Outils
Pichet *-- "hÃ©rite" Outils
Coquillage *-- "hÃ©rite" Outils

Aquarium *-- "Fait partie" Emplacementaq
Inventaire *-- "Fait partie" Emplacementinv
Sante *-- "Fait partie" EmplacementSante
GUIMain "Prend eau" o-- CycleAzote
GUIMain "Prend temps" o-- CycleAzote
Temps *-- "Prend temps" GUIMain
GUIMain *-- "methode" MethodeGUIMain
GUIMain *-- "methode" GestionException
PanelShop *-- "methode" Magasin
PanelShop *-- "prend l'argent" Argent

PoissonRouge *-- "hÃ©rite" Poisson
PoissonBetta *-- "hÃ©rite" Poisson
PoissonTetra *-- "hÃ©rite" Poisson
PoissonNeo *-- "hÃ©rite" Poisson
JavaFern *-- "hÃ©rite" Plante
BlueBlue *-- "hÃ©rite" Plante
ScarletRot *-- "hÃ©rite" Plante
Erdtree *-- "hÃ©rite" Plante

GUIMain "1" o-- "1" Pipette
GUIMain "1" o-- "1" Ciseau
GUIMain "1" o-- "1" Filet
GUIMain "1" o-- "1" Pichet
GUIMain "1" o-- "1" Coquillage
GUIMain "1" o-- "1" Inventaire
GUIMain "1" o-- "1" Sante
GUIMain "1" o-- "1" Aquarium
GUIMain "1" o-- "1" Eau
GUIMain "1" o-- "1" Temps

PanelShop "1..*" o-- "1" PoissonRouge
PanelShop "1..*" o-- "1" PoissonBetta
PanelShop "1..*" o-- "1" PoissonTetra
PanelShop "1..*" o-- "1" PoissonNeo
PanelShop "1..*" o-- "1" JavaFern
PanelShop "1..*" o-- "1" BlueBlue
PanelShop "1..*" o-- "1" ScarletRot
PanelShop "1..*" o-- "1" Erdtree

@enduml